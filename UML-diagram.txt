@startuml Connect4
namespace Connect4 {

  class Connect4{
    - board : Board
    - turn: Turn
    + Connect4()
    + play()
    + readMove(Scanner): int
    + {static} main(String[])
  }

  class Board {
    - tokens: Token[][]
    - solution: Solution
    ~ Board()
    ~ dropPiece(column, token): boolean
    ~ enableColumn(column): boolean
    ~ checkVictory(Token): boolean
    ~ print()
    ~ isBoardFull(): boolean
    ~ getColorOnPosition(row, column): Token
    ~ isTokenNone(row, column): Token
  }

  class Turn {
    - NUM_PLAYERS
    - value: Int
    - players: Player[]
    ~ Turn(Board)
    ~ player(): Player
    ~ playerColor(): Token
    ~ previousPlayer(): Player
    ~ previousPlayerColor(): Token
    ~ alternateValue(): int
    ~ changeValue()
  }

  class Player {
    - color: Token
    ~ Player(Token)
    ~ put(Board, columna)
    ~ getColor(): Token
    ~ askForColumn()
  }

  enum Token {
    XS
    OS
    NONE
    ~ Token(value)
    ~ getToken()
  }

  enum Error {
    OUT_OF_RANGE
    COLUMN_FULL
    ~ writeLn()
  }

  class Solution {
    ~ vertical(Board)
    ~ horizontal(Board)
    ~ ascendentDiagonal(Board)
    ~ descendentDiagonal(Board)
  }

  Connect4 *-down-> Board
  Connect4 *-down-> Turn
  Player *-down-> Board
  Turn *-down-> "2" Player
  Player *-down-> Token
  Board *-down->Solution
  Board .down->Token
  Board .down->Error
}

@enduml
